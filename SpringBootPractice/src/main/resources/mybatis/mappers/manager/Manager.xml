<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.test.app.page.manager.mapper.ManagerMapper">

	<!-- 관리자 목록 개수 조회 -->
	<select id="selectManagerCount" parameterType="paramMap" resultType="int">
		/* ManagerMapper.selectManagerCount */
		SELECT COUNT(*)
		  FROM member_account ma
		  INNER JOIN member_add_info mai
		     ON ma.username = mai.username
		 WHERE 1 = (
				CASE WHEN #{srch_type} = '1' AND ma.enabled = '1' THEN 1
					 WHEN #{srch_type} = '0' AND ma.enabled = '0' THEN 1
					 WHEN #{srch_type} = '99' THEN 1
					 ELSE 2
				END)
		   AND 1= (
				CASE WHEN #{srch_gbn} = 'id' 
						AND ma.username LIKE '%'||#{srch_txt}||'%' THEN 1
					 WHEN #{srch_gbn} = 'name' 
					 	AND mai.fullname  LIKE '%'||#{srch_txt}||'%' THEN 1
					 WHEN #{srch_gbn} = 'all'
					 	AND (ma.username LIKE '%'||#{srch_txt}||'%'
					 		OR mai.fullname  LIKE '%'||#{srch_txt}||'%') THEN 1 
					 ELSE 2
				END)
	</select>
	
	<!-- 관리자 목록 조회 -->
	<select id="selectManagerList" parameterType="paramMap" resultType="resMap">
		/* ManagerMapper.selectManagerList */
		SELECT *
		  FROM (
			SELECT rownum() AS RNUM
					, ma.seq
					, ma.username AS ID
					, mai.fullname AS NAME
					, ma.enabled AS STATE
					, IFNULL(mai.belong, '') AS BELONG
			  FROM member_account ma
			  INNER JOIN member_add_info mai
			     ON ma.username = mai.username
			 WHERE 1 = (
					CASE WHEN #{srch_type} = '1' AND ma.enabled = '1' THEN 1
						 WHEN #{srch_type} = '0' AND ma.enabled = '0' THEN 1
						 WHEN #{srch_type} = '99' THEN 1
						 ELSE 2
					END)
			   AND 1= (
					CASE WHEN #{srch_gbn} = 'id' 
							AND ma.username LIKE '%'||#{srch_txt}||'%' THEN 1
						 WHEN #{srch_gbn} = 'name' 
						 	AND mai.fullname  LIKE '%'||#{srch_txt}||'%' THEN 1
						 WHEN #{srch_gbn} = 'all'
						 	AND (ma.username LIKE '%'||#{srch_txt}||'%'
						 		OR mai.fullname  LIKE '%'||#{srch_txt}||'%') THEN 1 
						 ELSE 2
					END)
			 ORDER BY ma.seq DESC
		  )
		 WHERE RNUM > #{start} limit #{length} 
	</select>
	
	<!-- 관리자 아이디 유무 조회 -->
	<select id="selectCheckUserName" parameterType="paramMap" resultType="resMap">
		/* ManagerMapper.selectCheckUserName */
		SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END AS BEING
		  FROM member_account
		 WHERE username = #{username}
	</select>	
	
	<!-- 관리자 계정 등록 -->
	<insert id="insertManagerAccount" parameterType="paramMap">
		/* ManagerMapper.insertManagerAccount */
		INSERT INTO member_account (
			username
			, password
			, enabled
			, reg_ip
		) VALUES (
			#{username}
			, #{password}
			, #{enabled}
			, #{ipAddr}
		)
	</insert>
	
	<!-- 관리자 부가정보 등록 -->
	<insert id="insertManagerInfo" parameterType="paramMap">
		/* ManagerMapper.insertManagerInfo */
		INSERT INTO member_add_info (
			username
			, fullname
			, tel
			, belong
			, etc
		) VALUES (
			#{username}
			, #{fullname}
			, #{tel}
			, #{belong}
			, #{etc}
		)
	</insert>
	
	<!-- 관리자 부가정보 삭제 -->	
	<delete id="deleteManagerInfo" parameterType="paramMap">
		/* ManagerMapper.deleteManagerInfo */
		DELETE FROM member_add_info
		  WHERE username IN
		  <foreach collection="usernames" item="item" open="(" close=")" separator=",">
			#{item}
		  </foreach>
	</delete>

	<!-- 관리자 계정 삭제 -->	
	<delete id="deleteManagerAccount" parameterType="paramMap">
		/* ManagerMapper.deleteManagerAccount */
		DELETE FROM member_account
		  WHERE username IN
		  <foreach collection="usernames" item="item" open="(" close=")" separator=",">
			#{item}
		  </foreach>
	</delete>
	
	<!-- 관리자 조회 -->
	<select id="selectManagerInfo" parameterType="paramMap" resultType="resMap">
		/* ManagerMapper.selectManagerInfo */
		SELECT ma.username
				, mai.fullname
				, mai.belong
				, mai.tel
				, ma.enabled
				, mai.etc
				, IFNULL(TO_CHAR(ma.last_login_dt, 'YYYY-MM-DD HH24:MI'), '-') AS last_login_dt 
		  FROM member_account ma
		  INNER JOIN member_add_info mai
		     ON ma.username = mai.username
		 WHERE ma.username = #{username}
	</select>
	
	<!-- 관리자 부가정보 수정 -->
	<update id="updateManagerInfo" parameterType="paramMap">
		/* ManagerMapper.updateManagerInfo */
		UPDATE member_add_info
		   SET fullname = #{fullname}
		   		, tel = #{tel}
		   		, belong = #{belong}
		   		, etc = #{etc}
		   		, upd_dt = SYSDATE
		  WHERE username = #{username}
	</update>
	
	<!-- 관리자 계정 수정 -->
	<update id="updateManagerAccount" parameterType="paramMap">
		/* ManagerMapper.updateManagerAccount */
		UPDATE member_account
		   SET password = CASE WHEN #{password} = '' THEN password ELSE #{password} END
		   		, enabled = #{enabled}
		   		, last_pwd_upd_dt = CASE WHEN #{password} = '' THEN NULL ELSE SYSDATE END
		   		, last_ebd_upd_dt = SYSDATE 
		  WHERE username = #{username}
	</update>

</mapper>